openapi: '3.0.0'
info:
  description: |
    Vipps offers the possibility for merchants to ask for the user's profile information as part of the payment flow.
    This follows the [OIDC Standard](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo) for the UserInfo endpoint.
  version: 2.0.2
  title: Vipps Userinfo API
servers:
  - url: https://api.vipps.no
    description: Production environment (uses the production API keys, the official app and live data)
  - url: https://apitest.vipps.no
    description: Test environment (uses the test API keys, the test app and test data)
paths:
  '/vipps-userinfo-api/userinfo/{sub}':
    get:
      summary: Get Userinfo
      description: >-
        This endpoint returns the payload with the information that the user has consented to share.
        Find more info on the `/userinfo` endpoint at the OIDC Standard https://openid.net/specs/openid-connect-core-1_0.html#UserInfo
      operationId: getUserinfo
      parameters:
        - name: sub
          in: path
          description: The `sub` is specified when fetching payment details
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: >-
            The access token is a base64-encoded string that is required for all API calls.
            It is a JWT (JSON Web Token).
            The access token is fetched from the
            [`POST:/accesstoken/get`](https://vippsas.github.io/vipps-developer-docs/api/access-token#tag/Authorization-Service/operation/fetchAuthorizationTokenUsingPost)
            endpoint.
            It is valid for 1 hour in the test environment and 24 hours in the production environment.
          required: true
          schema:
            type: string
          example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1Ni..."
        - in: header
          name: Merchant-Serial-Number
          description: >-
            The Merchant Serial Number (MSN) is a unique id for the sale unit
            that this payment is made for.
            This is a required parameter if you are a Vipps partner
            making payments on behalf of a merchant.
            The partner must use the merchant's MSN (not the partner's MSN).
            This parameter is optional, and recommended, for regular Vipps
            merchants making payments for themselves.
          required: false
          schema:
            type: string
          example: '123456'
      responses:
        "200":
          description: Get Userinfo
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Userinfo'
        '400':
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UserinfoError'
        '401':
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UserinfoError'
        '403':
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UserinfoError'
        '404':
          description: Not Found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UserinfoError'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UserinfoError'
components:
  schemas:
    Address:
      type: object
      required:
        - addressLine1
        - city
        - country
        - postCode
      description: This version of the API only supports Norwegian addresses.
      properties:
        addressLine1:
          type: string
          description: Address line 1
          example: Robert Levins gate 5
        addressLine2:
          type: string
          description: Address line 2
          example: 'Att: Rune Garborg'
        city:
          type: string
          description: City
          example: Oslo
        country:
          type: string
          description: 'Country'
          example: 'Norway'
          enum:
            - Norway
        postCode:
          type: string
          description: Post code
          example: '0154'
    Userinfo:
      type: object
      properties:
        accounts:
          description: 'Contains an array with the user''s bank accounts registered in the Vipps app'
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/UserinfoAccountInfo'
        address:
          description: 'Contains the user''s preferred (default) address.'
          items:
            $ref: '#/components/schemas/UserinfoAddress'
        other_addresses:
          description: 'Contains an array with the user''s non-default addresses, if any. This list can contain an address with the address_type home, work, and/or other, if the user has registered them in the Vipps app'
          type: array
          items:
            $ref: '#/components/schemas/Address'
        birthdate:
          description: 'The user''s birthday formatted as YYYY-MM-DD'
          type: string
          example: '2000-12-31'
        email:
          description: 'The user''s email address.'
          example: user@example.com
          type: string
        email_verified:
          description: 'Boolean value indicating whether the user''s email address is verified or not.'
          type: boolean
          example: true
        family_name:
          description: 'Surname(s) or last name(s) of the user.'
          example: Lovelace
          type: string
        given_name:
          description: 'Given name(s) or first name(s) of the user. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
          type: string
          example: Ada
        name:
          description: 'The user''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the user''s locale and preferences.'
          type: string
          example: Ada Lovelace
        nin:
          description: 'National identity number'
          type: string
          example: '09057517287'
          pattern: '^\d{11}$'
        phone_number:
          description: 'The user''s telephone number on MSISDN format: Includes country code, but does not start with `+`. Up to 15 digits.'
          type: string
          example: '47912345678'
          pattern: '^\d{15}$'
        sid:
          description: 'Session identifier - This represents a Session of a User Agent or device. Currently not in use'
          type: string
          example: '7d78a726-af92-499e-b857-de263ef9a969'
        sub:
          description: 'Subject - Identifier for the user'
          type: string
          example: 'c06c4afe-d9e1-4c5d-939a-177d752a0944'
    UserinfoAccountInfo:
      type: object
      description: Bank account
      deprecated: true
      properties:
        account_name:
          description: "User''s defined name for account"
          type: string
          example: "Savings account"
        account_number:
          description: "User''s account number"
          type: string
          example: 86011117947
        bank_name:
          description: "Bank connected to the account number"
          type: string
          example: "ACME Bank"
    UserinfoAddress:
      type: object
      properties:
        address_type:
          description: 'Address type is either home, work or other'
          type: string
          example: home
        country:
          description: 'Two letter country code'
          type: string
          example: "NO"
        default:
          description: 'If this is default address'
          type: boolean
          example: true
        formatted:
          description: "The user's address as a formatted string"
          type: string
          example: "Robert Levins gate 5\n0154 Oslo"
        postal_code:
          description: 'Postal code'
          type: string
          example: "0154"
        region:
          description: "The user's region (typically a county, town or city)"
          type: string
          example: "Oslo"
        street_address:
          description: "The user's street address"
          type: string
          example: "Robert Levins gate 5"
    UserinfoError:
      type: object
      description: |-
        The standard Error object.
        See https://vippsas.github.io/vipps-developer-docs/docs/vipps-developers/common-topics/errors
      properties:
        type:
          type: string
          example: https://example.com/validation-error
        title:
          type: string
          example: Your request parameters didn't validate.
        status:
          type: string
          example: TODO
        detail:
          type: string
          example: The request body contains one or more errors
        instance:
          type: string
          example: 123e4567-e89b-12d3-a456-426655440000
        extraInfo:
          type: object
          additionalProperties:
            type: object
